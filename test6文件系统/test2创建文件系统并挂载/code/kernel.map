
Allocating common symbols
Common symbol       size              file

kbd_buf             0x6c              keyboard.o
thread_ready_list   0x10              thread.o
thread_all_list     0x10              thread.o
user_pool           0x2c              memory.o
channel_cnt         0x1               ide.o
cur_part            0x4               fs.o
k_block_descs       0xa8              memory.o
idle_thread         0x4               thread.o
intr_name           0x204             interrupt.o
main_thread         0x4               thread.o
channels            0xcc0             ide.o
ticks               0x4               timer.o
kernel_vaddr        0xc               memory.o
syscall_table       0x80              syscall-init.o
idt_table           0x204             interrupt.o
partition_list      0x10              ide.o
kernel_pool         0x2c              memory.o
pid_lock            0x1c              thread.o

Discarded input sections

 .group         0x0000000000000000        0x8 main.o
 .note.GNU-stack
                0x0000000000000000        0x0 main.o
 .group         0x0000000000000000        0x8 init.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 init.o
 .note.GNU-stack
                0x0000000000000000        0x0 init.o
 .group         0x0000000000000000        0x8 interrupt.o
 .group         0x0000000000000000        0x8 interrupt.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 interrupt.o
 .note.GNU-stack
                0x0000000000000000        0x0 interrupt.o
 .group         0x0000000000000000        0x8 timer.o
 .group         0x0000000000000000        0x8 timer.o
 .group         0x0000000000000000        0x8 timer.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 timer.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 timer.o
 .note.GNU-stack
                0x0000000000000000        0x0 timer.o
 .group         0x0000000000000000        0x8 debug.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 debug.o
 .note.GNU-stack
                0x0000000000000000        0x0 debug.o
 .group         0x0000000000000000        0x8 memory.o
 .group         0x0000000000000000        0x8 memory.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 memory.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 memory.o
 .note.GNU-stack
                0x0000000000000000        0x0 memory.o
 .group         0x0000000000000000        0x8 bitmap.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 bitmap.o
 .note.GNU-stack
                0x0000000000000000        0x0 bitmap.o
 .group         0x0000000000000000        0x8 string.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 string.o
 .note.GNU-stack
                0x0000000000000000        0x0 string.o
 .group         0x0000000000000000        0x8 thread.o
 .group         0x0000000000000000        0x8 thread.o
 .group         0x0000000000000000        0x8 thread.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 thread.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 thread.o
 .note.GNU-stack
                0x0000000000000000        0x0 thread.o
 .group         0x0000000000000000        0x8 list.o
 .group         0x0000000000000000        0x8 list.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 list.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 list.o
 .note.GNU-stack
                0x0000000000000000        0x0 list.o
 .group         0x0000000000000000        0x8 console.o
 .group         0x0000000000000000        0x8 console.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 console.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .group         0x0000000000000000        0x8 sync.o
 .group         0x0000000000000000        0x8 sync.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 sync.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 sync.o
 .note.GNU-stack
                0x0000000000000000        0x0 sync.o
 .group         0x0000000000000000        0x8 keyboard.o
 .group         0x0000000000000000        0x8 keyboard.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 keyboard.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .group         0x0000000000000000        0x8 ioqueue.o
 .group         0x0000000000000000        0x8 ioqueue.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 ioqueue.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 ioqueue.o
 .note.GNU-stack
                0x0000000000000000        0x0 ioqueue.o
 .group         0x0000000000000000        0x8 tss.o
 .group         0x0000000000000000        0x8 tss.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 tss.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 tss.o
 .note.GNU-stack
                0x0000000000000000        0x0 tss.o
 .group         0x0000000000000000        0x8 process.o
 .group         0x0000000000000000        0x8 process.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 process.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 process.o
 .note.GNU-stack
                0x0000000000000000        0x0 process.o
 .group         0x0000000000000000        0x8 syscall.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 syscall.o
 .note.GNU-stack
                0x0000000000000000        0x0 syscall.o
 .group         0x0000000000000000        0x8 syscall-init.o
 .group         0x0000000000000000        0x8 syscall-init.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 syscall-init.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 syscall-init.o
 .note.GNU-stack
                0x0000000000000000        0x0 syscall-init.o
 .group         0x0000000000000000        0x8 stdio.o
 .group         0x0000000000000000        0x8 stdio.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 stdio.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 stdio.o
 .note.GNU-stack
                0x0000000000000000        0x0 stdio.o
 .group         0x0000000000000000        0x8 ide.o
 .group         0x0000000000000000        0x8 ide.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 ide.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 ide.o
 .note.GNU-stack
                0x0000000000000000        0x0 ide.o
 .group         0x0000000000000000        0x8 stdio-kernel.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 stdio-kernel.o
 .note.GNU-stack
                0x0000000000000000        0x0 stdio-kernel.o
 .group         0x0000000000000000        0x8 fs.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 fs.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0xc0001500
LOAD main.o
LOAD init.o
LOAD interrupt.o
LOAD timer.o
LOAD kernel.o
LOAD print.o
LOAD debug.o
LOAD memory.o
LOAD bitmap.o
LOAD string.o
LOAD thread.o
LOAD list.o
LOAD switch.o
LOAD console.o
LOAD sync.o
LOAD keyboard.o
LOAD ioqueue.o
LOAD tss.o
LOAD process.o
LOAD syscall.o
LOAD syscall-init.o
LOAD stdio.o
LOAD ide.o
LOAD stdio-kernel.o
LOAD fs.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x00000000080480d4                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x00000000080480d4        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x00000000080480d4        0x0 main.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x00000000080480d4        0x0 main.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x00000000080480d4        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x00000000080480d4        0x0 main.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)
                0x0000000008049000                . = ALIGN (CONSTANT (MAXPAGESIZE))

.init
 *(SORT_NONE(.init))

.plt            0x0000000008049000        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008049000        0x0 main.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001500     0x6573
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500      0x365 main.o
                0x00000000c0001500                main
                0x00000000c0001533                k_thread_a
                0x00000000c0001625                k_thread_b
                0x00000000c0001717                u_prog_a
                0x00000000c00017be                u_prog_b
 .text.__x86.get_pc_thunk.bx
                0x00000000c0001865        0x4 main.o
                0x00000000c0001865                __x86.get_pc_thunk.bx
 .text          0x00000000c0001869       0x61 init.o
                0x00000000c0001869                init_all
 .text          0x00000000c00018ca      0x571 interrupt.o
                0x00000000c0001cf1                intr_enable
                0x00000000c0001d24                intr_disable
                0x00000000c0001d57                intr_set_status
                0x00000000c0001d7f                intr_get_status
                0x00000000c0001da6                register_handler
                0x00000000c0001dcf                idt_init
 .text.__x86.get_pc_thunk.ax
                0x00000000c0001e3b        0x4 interrupt.o
                0x00000000c0001e3b                __x86.get_pc_thunk.ax
 .text          0x00000000c0001e3f      0x25b timer.o
                0x00000000c0001fd0                mtime_sleep
                0x00000000c0002032                timer_init
 .text.__x86.get_pc_thunk.cx
                0x00000000c000209a        0x4 timer.o
                0x00000000c000209a                __x86.get_pc_thunk.cx
 *fill*         0x00000000c000209e        0x2 
 .text          0x00000000c00020a0      0x55b kernel.o
                0x00000000c00020a0                intr_exit
                0x00000000c00025d7                syscall_handler
 *fill*         0x00000000c00025fb        0x5 
 .text          0x00000000c0002600      0x172 print.o
                0x00000000c0002600                put_str
                0x00000000c000261e                put_char
                0x00000000c00026eb                put_int
                0x00000000c000274e                set_cursor
 .text          0x00000000c0002772       0xf4 debug.o
                0x00000000c0002772                panic_spin
 .text          0x00000000c0002866     0x1348 memory.o
                0x00000000c0002999                pte_ptr
                0x00000000c00029d3                pde_ptr
                0x00000000c0002b8a                malloc_page
                0x00000000c0002c63                get_kernel_pages
                0x00000000c0002cd7                get_user_pages
                0x00000000c0002d4b                get_a_page
                0x00000000c0002ee7                addr_v2p
                0x00000000c0002f58                sys_malloc
                0x00000000c00032b0                pfree
                0x00000000c0003426                mfree_page
                0x00000000c0003625                sys_free
                0x00000000c0003aa4                block_desc_init
                0x00000000c0003b48                mem_init
 .text          0x00000000c0003bae      0x28d bitmap.o
                0x00000000c0003bae                bitmap_init
                0x00000000c0003be1                bitmap_scan_test
                0x00000000c0003c2b                bitmap_scan
                0x00000000c0003d73                bitmap_set
 .text          0x00000000c0003e3b      0x4aa string.o
                0x00000000c0003e3b                memset
                0x00000000c0003ea4                memcpy
                0x00000000c0003f1b                memcmp
                0x00000000c0003fb4                strcpy
                0x00000000c000401f                strlen
                0x00000000c000407c                strcmp
                0x00000000c000410b                strchr
                0x00000000c0004179                strrchr
                0x00000000c00041ed                strcat
                0x00000000c000426d                strchrs
 .text          0x00000000c00042e5      0x7e0 thread.o
                0x00000000c0004306                running_thread
                0x00000000c00043a4                thread_create
                0x00000000c0004428                init_thread
                0x00000000c00044df                thread_start
                0x00000000c000467c                schedule
                0x00000000c00047f6                thread_block
                0x00000000c000486e                thread_unblock
                0x00000000c000498f                thread_yield
                0x00000000c0004a2c                thread_init
 .text.__x86.get_pc_thunk.dx
                0x00000000c0004ac5        0x4 thread.o
                0x00000000c0004ac5                __x86.get_pc_thunk.dx
 .text          0x00000000c0004ac9      0x25f list.o
                0x00000000c0004ac9                list_init
                0x00000000c0004b01                list_insert_before
                0x00000000c0004b55                list_push
                0x00000000c0004b7d                list_append
                0x00000000c0004ba5                list_remove
                0x00000000c0004bee                list_pop
                0x00000000c0004c1a                elem_find
                0x00000000c0004c5f                list_traversal
                0x00000000c0004cc6                list_len
                0x00000000c0004d05                list_empty
 *fill*         0x00000000c0004d28        0x8 
 .text          0x00000000c0004d30       0x15 switch.o
                0x00000000c0004d30                switch_to
 .text          0x00000000c0004d45      0x119 console.o
                0x00000000c0004d45                console_init
                0x00000000c0004d70                console_acquire
                0x00000000c0004d9b                console_release
                0x00000000c0004dc6                console_put_str
                0x00000000c0004df6                console_put_char
                0x00000000c0004e2e                console_put_int
 .text          0x00000000c0004e5e      0x38f sync.o
                0x00000000c0004e5e                sema_init
                0x00000000c0004e98                lock_init
                0x00000000c0004ed2                sema_down
                0x00000000c0004fee                sema_up
                0x00000000c00050b8                lock_acquire
                0x00000000c000513e                lock_release
 .text          0x00000000c00051ed      0x33e keyboard.o
                0x00000000c00054c9                keyboard_init
 .text          0x00000000c000552b      0x37e ioqueue.o
                0x00000000c000552b                ioqueue_init
                0x00000000c00055a5                ioq_full
                0x00000000c000570e                ioq_getchar
                0x00000000c00057da                ioq_putchar
 .text          0x00000000c00058a9      0x1b2 tss.o
                0x00000000c00058a9                update_tss_esp
                0x00000000c000593a                tss_init
 .text          0x00000000c0005a5b      0x3dc process.o
                0x00000000c0005a5b                start_process
                0x00000000c0005b6f                page_dir_activate
                0x00000000c0005bb4                process_activate
                0x00000000c0005c17                create_page_dir
                0x00000000c0005ca0                create_user_vaddr_bitmap
                0x00000000c0005cf9                process_execute
 .text          0x00000000c0005e37       0x98 syscall.o
                0x00000000c0005e37                getpid
                0x00000000c0005e56                write
                0x00000000c0005e7f                malloc
                0x00000000c0005ea8                free
 .text          0x00000000c0005ecf       0xcd syscall-init.o
                0x00000000c0005ecf                sys_getpid
                0x00000000c0005ef2                sys_write
                0x00000000c0005f25                syscall_init
 .text          0x00000000c0005f9c      0x2cc stdio.o
                0x00000000c000602d                vsprintf
                0x00000000c00061bb                sprintf
                0x00000000c00061f5                printf
 .text          0x00000000c0006268      0xee7 ide.o
                0x00000000c00065ee                ide_read
                0x00000000c0006783                ide_write
                0x00000000c0006e3a                intr_hd_handler
                0x00000000c0006f12                ide_init
 .text          0x00000000c000714f       0x74 stdio-kernel.o
                0x00000000c000714f                printk
 .text          0x00000000c00071c3      0x8b0 fs.o
                0x00000000c0007891                filesys_init
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)
                0x00000000c0008000                . = ALIGN (CONSTANT (MAXPAGESIZE))
                0x00000000c0008000                . = SEGMENT_START ("rodata-segment", (ALIGN (CONSTANT (MAXPAGESIZE)) + (. & (CONSTANT (MAXPAGESIZE) - 0x1))))

.rodata         0x00000000c0008000     0x132d
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c0008000       0x88 main.o
 .rodata        0x00000000c0008088        0xa init.o
 *fill*         0x00000000c0008092        0x2 
 .rodata        0x00000000c0008094      0x2cd interrupt.o
 *fill*         0x00000000c0008361        0x3 
 .rodata        0x00000000c0008364       0x88 timer.o
 .rodata        0x00000000c00083ec       0x3f debug.o
 *fill*         0x00000000c000842b        0x1 
 .rodata        0x00000000c000842c      0x3bd memory.o
 *fill*         0x00000000c00087e9        0x3 
 .rodata        0x00000000c00087ec       0x6b bitmap.o
 *fill*         0x00000000c0008857        0x1 
 .rodata        0x00000000c0008858       0xc4 string.o
 .rodata        0x00000000c000891c      0x2dd thread.o
 *fill*         0x00000000c0008bf9        0x3 
 .rodata        0x00000000c0008bfc      0x135 sync.o
 .rodata        0x00000000c0008d31       0x36 keyboard.o
 *fill*         0x00000000c0008d67        0x1 
 .rodata        0x00000000c0008d68       0xa8 ioqueue.o
 .rodata        0x00000000c0008e10       0x27 tss.o
 *fill*         0x00000000c0008e37        0x1 
 .rodata        0x00000000c0008e38       0xe0 process.o
 .rodata        0x00000000c0008f18       0x27 syscall-init.o
 *fill*         0x00000000c0008f3f        0x1 
 .rodata        0x00000000c0008f40      0x1f9 ide.o
 *fill*         0x00000000c0009139        0x3 
 .rodata        0x00000000c000913c      0x1f1 fs.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c0009330     0x14bc
 *(.eh_frame)
 .eh_frame      0x00000000c0009330       0xc4 main.o
 .eh_frame      0x00000000c00093f4       0x24 init.o
                                         0x50 (size before relaxing)
 .eh_frame      0x00000000c0009418      0x1ac interrupt.o
                                        0x1d8 (size before relaxing)
 .eh_frame      0x00000000c00095c4       0xf0 timer.o
                                        0x130 (size before relaxing)
 .eh_frame      0x00000000c00096b4       0x1c debug.o
                                         0x48 (size before relaxing)
 .eh_frame      0x00000000c00096d0      0x2dc memory.o
                                        0x31c (size before relaxing)
 .eh_frame      0x00000000c00099ac       0x90 bitmap.o
                                         0xbc (size before relaxing)
 .eh_frame      0x00000000c0009a3c      0x168 string.o
                                        0x194 (size before relaxing)
 .eh_frame      0x00000000c0009ba4      0x1d8 thread.o
                                        0x218 (size before relaxing)
 .eh_frame      0x00000000c0009d7c      0x148 list.o
                                        0x188 (size before relaxing)
 .eh_frame      0x00000000c0009ec4       0xd8 console.o
                                        0x118 (size before relaxing)
 .eh_frame      0x00000000c0009f9c       0xdc sync.o
                                        0x11c (size before relaxing)
 .eh_frame      0x00000000c000a078       0x68 keyboard.o
                                         0xa8 (size before relaxing)
 .eh_frame      0x00000000c000a0e0      0x11c ioqueue.o
                                        0x15c (size before relaxing)
 .eh_frame      0x00000000c000a1fc       0x6c tss.o
                                         0xac (size before relaxing)
 .eh_frame      0x00000000c000a268       0xd8 process.o
                                        0x118 (size before relaxing)
 .eh_frame      0x00000000c000a340       0x8c syscall.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c000a3cc       0x6c syscall-init.o
                                         0xac (size before relaxing)
 .eh_frame      0x00000000c000a438       0x90 stdio.o
                                         0xd0 (size before relaxing)
 .eh_frame      0x00000000c000a4c8      0x27c ide.o
                                        0x2bc (size before relaxing)
 .eh_frame      0x00000000c000a744       0x28 stdio-kernel.o
                                         0x54 (size before relaxing)
 .eh_frame      0x00000000c000a76c       0x80 fs.o
                                         0xac (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges*)
                0x00000000c000c000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges*)

.tdata          0x00000000c000c000        0x0
                [!provide]                        PROVIDE (__tdata_start = .)
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c000c000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c000c000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c000c000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c000c000        0x0
 *(.got)
 .got           0x00000000c000c000        0x0 main.o
 *(.igot)
                0x00000000c000cff4                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c000c000        0xc
 *(.got.plt)
 .got.plt       0x00000000c000c000        0xc main.o
                0x00000000c000c000                _GLOBAL_OFFSET_TABLE_
 *(.igot.plt)
 .igot.plt      0x00000000c000c00c        0x0 main.o

.data           0x00000000c000c020      0x156
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c000c020        0x0 main.o
 .data          0x00000000c000c020        0x0 init.o
 .data          0x00000000c000c020        0x0 interrupt.o
 .data          0x00000000c000c020        0x0 timer.o
 .data          0x00000000c000c020       0xc0 kernel.o
                0x00000000c000c020                intr_entry_table
 .data          0x00000000c000c0e0        0x8 print.o
 .data          0x00000000c000c0e8        0x0 debug.o
 .data          0x00000000c000c0e8        0x0 memory.o
 .data          0x00000000c000c0e8        0x0 bitmap.o
 .data          0x00000000c000c0e8        0x0 string.o
 .data          0x00000000c000c0e8        0x0 thread.o
 .data          0x00000000c000c0e8        0x0 list.o
 .data          0x00000000c000c0e8        0x0 console.o
 .data          0x00000000c000c0e8        0x0 sync.o
 *fill*         0x00000000c000c0e8       0x18 
 .data          0x00000000c000c100       0x76 keyboard.o
 .data          0x00000000c000c176        0x0 ioqueue.o
 .data          0x00000000c000c176        0x0 tss.o
 .data          0x00000000c000c176        0x0 process.o
 .data          0x00000000c000c176        0x0 syscall.o
 .data          0x00000000c000c176        0x0 syscall-init.o
 .data          0x00000000c000c176        0x0 stdio.o
 .data          0x00000000c000c176        0x0 ide.o
 .data          0x00000000c000c176        0x0 stdio-kernel.o
 .data          0x00000000c000c176        0x0 fs.o

.data1
 *(.data1)
                0x00000000c000c176                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c000c176                . = .
                0x00000000c000c176                __bss_start = .

.bss            0x00000000c000c180     0x1874
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c000c180        0x0 main.o
 .bss           0x00000000c000c180        0x0 init.o
 .bss           0x00000000c000c180      0x408 interrupt.o
 .bss           0x00000000c000c588        0x0 timer.o
 .bss           0x00000000c000c588        0x0 debug.o
 .bss           0x00000000c000c588        0x0 memory.o
 .bss           0x00000000c000c588        0x0 bitmap.o
 .bss           0x00000000c000c588        0x0 string.o
 .bss           0x00000000c000c588        0x6 thread.o
 .bss           0x00000000c000c58e        0x0 list.o
 *fill*         0x00000000c000c58e        0x2 
 .bss           0x00000000c000c590       0x1c console.o
 .bss           0x00000000c000c5ac        0x0 sync.o
 .bss           0x00000000c000c5ac       0x14 keyboard.o
 .bss           0x00000000c000c5c0        0x0 ioqueue.o
 .bss           0x00000000c000c5c0       0x6c tss.o
 .bss           0x00000000c000c62c        0x0 process.o
 .bss           0x00000000c000c62c        0x0 syscall.o
 .bss           0x00000000c000c62c        0x0 syscall-init.o
 .bss           0x00000000c000c62c        0x0 stdio.o
 .bss           0x00000000c000c62c        0x6 ide.o
                0x00000000c000c62c                ext_lba_base
                0x00000000c000c630                p_no
                0x00000000c000c631                l_no
 .bss           0x00000000c000c632        0x0 stdio-kernel.o
 .bss           0x00000000c000c632        0x0 fs.o
 *(COMMON)
 *fill*         0x00000000c000c632        0xe 
 COMMON         0x00000000c000c640      0x424 interrupt.o
                0x00000000c000c640                intr_name
                0x00000000c000c860                idt_table
 COMMON         0x00000000c000ca64        0x4 timer.o
                0x00000000c000ca64                ticks
 *fill*         0x00000000c000ca68       0x18 
 COMMON         0x00000000c000ca80      0x12c memory.o
                0x00000000c000ca80                user_pool
                0x00000000c000cac0                k_block_descs
                0x00000000c000cb68                kernel_vaddr
                0x00000000c000cb80                kernel_pool
 COMMON         0x00000000c000cbac       0x44 thread.o
                0x00000000c000cbac                thread_ready_list
                0x00000000c000cbbc                thread_all_list
                0x00000000c000cbcc                idle_thread
                0x00000000c000cbd0                main_thread
                0x00000000c000cbd4                pid_lock
 *fill*         0x00000000c000cbf0       0x10 
 COMMON         0x00000000c000cc00       0x6c keyboard.o
                0x00000000c000cc00                kbd_buf
 *fill*         0x00000000c000cc6c       0x14 
 COMMON         0x00000000c000cc80       0x80 syscall-init.o
                0x00000000c000cc80                syscall_table
 COMMON         0x00000000c000cd00      0xcf0 ide.o
                0x00000000c000cd00                channel_cnt
                0x00000000c000cd20                channels
                0x00000000c000d9e0                partition_list
 COMMON         0x00000000c000d9f0        0x4 fs.o
                0x00000000c000d9f0                cur_part
                0x00000000c000d9f4                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c000d9f4                . = ALIGN (0x4)
                0x00000000c000d9f4                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c000d9f4                . = ALIGN (0x4)
                0x00000000c000d9f4                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c000d9f4                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 init.o
 .comment       0x0000000000000011       0x12 interrupt.o
 .comment       0x0000000000000011       0x12 timer.o
 .comment       0x0000000000000011       0x12 debug.o
 .comment       0x0000000000000011       0x12 memory.o
 .comment       0x0000000000000011       0x12 bitmap.o
 .comment       0x0000000000000011       0x12 string.o
 .comment       0x0000000000000011       0x12 thread.o
 .comment       0x0000000000000011       0x12 list.o
 .comment       0x0000000000000011       0x12 console.o
 .comment       0x0000000000000011       0x12 sync.o
 .comment       0x0000000000000011       0x12 keyboard.o
 .comment       0x0000000000000011       0x12 ioqueue.o
 .comment       0x0000000000000011       0x12 tss.o
 .comment       0x0000000000000011       0x12 process.o
 .comment       0x0000000000000011       0x12 syscall.o
 .comment       0x0000000000000011       0x12 syscall-init.o
 .comment       0x0000000000000011       0x12 stdio.o
 .comment       0x0000000000000011       0x12 ide.o
 .comment       0x0000000000000011       0x12 stdio-kernel.o
 .comment       0x0000000000000011       0x12 fs.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.bin elf32-i386)
