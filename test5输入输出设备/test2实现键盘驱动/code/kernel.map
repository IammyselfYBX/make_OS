
Allocating common symbols
Common symbol       size              file

thread_ready_list   0x10              thread.o
thread_all_list     0x10              thread.o
user_pool           0x10              memory.o
intr_name           0xc0              interrupt.o
main_thread         0x4               thread.o
ticks               0x4               timer.o
kernel_vaddr        0xc               memory.o
idt_table           0xc0              interrupt.o
kernel_pool         0x10              memory.o

Discarded input sections

 .group         0x0000000000000000        0x8 main.o
 .note.GNU-stack
                0x0000000000000000        0x0 main.o
 .group         0x0000000000000000        0x8 init.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 init.o
 .note.GNU-stack
                0x0000000000000000        0x0 init.o
 .group         0x0000000000000000        0x8 interrupt.o
 .group         0x0000000000000000        0x8 interrupt.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 interrupt.o
 .note.GNU-stack
                0x0000000000000000        0x0 interrupt.o
 .group         0x0000000000000000        0x8 timer.o
 .group         0x0000000000000000        0x8 timer.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 timer.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 timer.o
 .note.GNU-stack
                0x0000000000000000        0x0 timer.o
 .group         0x0000000000000000        0x8 debug.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 debug.o
 .note.GNU-stack
                0x0000000000000000        0x0 debug.o
 .group         0x0000000000000000        0x8 memory.o
 .group         0x0000000000000000        0x8 memory.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 memory.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 memory.o
 .note.GNU-stack
                0x0000000000000000        0x0 memory.o
 .group         0x0000000000000000        0x8 bitmap.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 bitmap.o
 .note.GNU-stack
                0x0000000000000000        0x0 bitmap.o
 .group         0x0000000000000000        0x8 string.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 string.o
 .note.GNU-stack
                0x0000000000000000        0x0 string.o
 .group         0x0000000000000000        0x8 thread.o
 .group         0x0000000000000000        0x8 thread.o
 .group         0x0000000000000000        0x8 thread.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 thread.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 thread.o
 .note.GNU-stack
                0x0000000000000000        0x0 thread.o
 .group         0x0000000000000000        0x8 list.o
 .group         0x0000000000000000        0x8 list.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 list.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 list.o
 .note.GNU-stack
                0x0000000000000000        0x0 list.o
 .group         0x0000000000000000        0x8 console.o
 .group         0x0000000000000000        0x8 console.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 console.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .group         0x0000000000000000        0x8 sync.o
 .group         0x0000000000000000        0x8 sync.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 sync.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 sync.o
 .note.GNU-stack
                0x0000000000000000        0x0 sync.o
 .group         0x0000000000000000        0x8 keyboard.o
 .group         0x0000000000000000        0x8 keyboard.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 keyboard.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0xc0001500
LOAD main.o
LOAD init.o
LOAD interrupt.o
LOAD timer.o
LOAD kernel.o
LOAD print.o
LOAD debug.o
LOAD memory.o
LOAD bitmap.o
LOAD string.o
LOAD thread.o
LOAD list.o
LOAD switch.o
LOAD console.o
LOAD sync.o
LOAD keyboard.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x00000000080480d4                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x00000000080480d4        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x00000000080480d4        0x0 main.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x00000000080480d4        0x0 main.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x00000000080480d4        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x00000000080480d4        0x0 main.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)
                0x0000000008049000                . = ALIGN (CONSTANT (MAXPAGESIZE))

.init
 *(SORT_NONE(.init))

.plt            0x0000000008049000        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008049000        0x0 main.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001500     0x2d56
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500       0x88 main.o
                0x00000000c0001500                main
                0x00000000c0001538                k_thread_a
                0x00000000c0001560                k_thread_b
 .text.__x86.get_pc_thunk.bx
                0x00000000c0001588        0x4 main.o
                0x00000000c0001588                __x86.get_pc_thunk.bx
 .text          0x00000000c000158c       0x48 init.o
                0x00000000c000158c                init_all
 .text          0x00000000c00015d4      0x53d interrupt.o
                0x00000000c00019c7                intr_enable
                0x00000000c00019fa                intr_disable
                0x00000000c0001a2d                intr_set_status
                0x00000000c0001a55                intr_get_status
                0x00000000c0001a7c                register_handler
                0x00000000c0001aa5                idt_init
 .text.__x86.get_pc_thunk.ax
                0x00000000c0001b11        0x4 interrupt.o
                0x00000000c0001b11                __x86.get_pc_thunk.ax
 .text          0x00000000c0001b15      0x1ba timer.o
                0x00000000c0001c67                timer_init
 *fill*         0x00000000c0001ccf        0x1 
 .text          0x00000000c0001cd0      0x537 kernel.o
                0x00000000c0001cd0                intr_exit
 *fill*         0x00000000c0002207        0x9 
 .text          0x00000000c0002210      0x172 print.o
                0x00000000c0002210                put_str
                0x00000000c000222e                put_char
                0x00000000c00022fb                put_int
                0x00000000c000235e                set_cursor
 .text          0x00000000c0002382       0xf4 debug.o
                0x00000000c0002382                panic_spin
 .text          0x00000000c0002476      0x64b memory.o
                0x00000000c000250f                pte_ptr
                0x00000000c0002549                pde_ptr
                0x00000000c000270a                malloc_page
                0x00000000c00027e0                get_kernel_pages
                0x00000000c0002a6d                mem_init
 .text          0x00000000c0002ac1      0x28d bitmap.o
                0x00000000c0002ac1                bitmap_init
                0x00000000c0002af4                bitmap_scan_test
                0x00000000c0002b3e                bitmap_scan
                0x00000000c0002c86                bitmap_set
 .text          0x00000000c0002d4e      0x4aa string.o
                0x00000000c0002d4e                memset
                0x00000000c0002db7                memcpy
                0x00000000c0002e2e                memcmp
                0x00000000c0002ec7                strcpy
                0x00000000c0002f32                strlen
                0x00000000c0002f8f                strcmp
                0x00000000c000301e                strchr
                0x00000000c000308c                strrchr
                0x00000000c0003100                strcat
                0x00000000c0003180                strchrs
 .text          0x00000000c00031f8      0x64b thread.o
                0x00000000c00031f8                running_thread
                0x00000000c0003243                thread_create
                0x00000000c00032c7                init_thread
                0x00000000c000336c                thread_start
                0x00000000c0003509                schedule
                0x00000000c0003645                thread_block
                0x00000000c00036bd                thread_unblock
                0x00000000c00037de                thread_init
 .text.__x86.get_pc_thunk.dx
                0x00000000c0003843        0x4 thread.o
                0x00000000c0003843                __x86.get_pc_thunk.dx
 .text          0x00000000c0003847      0x25f list.o
                0x00000000c0003847                list_init
                0x00000000c000387f                list_insert_before
                0x00000000c00038d3                list_push
                0x00000000c00038fb                list_append
                0x00000000c0003923                list_remove
                0x00000000c000396c                list_pop
                0x00000000c0003998                elem_find
                0x00000000c00039dd                list_traversal
                0x00000000c0003a44                list_len
                0x00000000c0003a83                list_empty
 *fill*         0x00000000c0003aa6        0xa 
 .text          0x00000000c0003ab0       0x15 switch.o
                0x00000000c0003ab0                switch_to
 .text          0x00000000c0003ac5      0x119 console.o
                0x00000000c0003ac5                console_init
                0x00000000c0003af0                console_acquire
                0x00000000c0003b1b                console_release
                0x00000000c0003b46                console_put_str
                0x00000000c0003b76                console_put_char
                0x00000000c0003bae                console_put_int
 .text          0x00000000c0003bde      0x38f sync.o
                0x00000000c0003bde                sema_init
                0x00000000c0003c18                lock_init
                0x00000000c0003c52                sema_down
                0x00000000c0003d6e                sema_up
                0x00000000c0003e38                lock_acquire
                0x00000000c0003ebe                lock_release
 .text          0x00000000c0003f6d      0x2e9 keyboard.o
                0x00000000c0004206                keyboard_init
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)
                0x00000000c0005000                . = ALIGN (CONSTANT (MAXPAGESIZE))
                0x00000000c0005000                . = SEGMENT_START ("rodata-segment", (ALIGN (CONSTANT (MAXPAGESIZE)) + (. & (CONSTANT (MAXPAGESIZE) - 0x1))))

.rodata         0x00000000c0005000      0xa2b
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c0005000        0xd main.o
 .rodata        0x00000000c000500d        0xa init.o
 *fill*         0x00000000c0005017        0x1 
 .rodata        0x00000000c0005018      0x2cd interrupt.o
 *fill*         0x00000000c00052e5        0x3 
 .rodata        0x00000000c00052e8       0x6b timer.o
 .rodata        0x00000000c0005353       0x3f debug.o
 *fill*         0x00000000c0005392        0x2 
 .rodata        0x00000000c0005394      0x130 memory.o
 .rodata        0x00000000c00054c4       0x6b bitmap.o
 *fill*         0x00000000c000552f        0x1 
 .rodata        0x00000000c0005530       0xc4 string.o
 .rodata        0x00000000c00055f4      0x2cb thread.o
 *fill*         0x00000000c00058bf        0x1 
 .rodata        0x00000000c00058c0      0x135 sync.o
 .rodata        0x00000000c00059f5       0x36 keyboard.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c0005a2c      0xb18
 *(.eh_frame)
 .eh_frame      0x00000000c0005a2c       0x8c main.o
 .eh_frame      0x00000000c0005ab8       0x24 init.o
                                         0x50 (size before relaxing)
 .eh_frame      0x00000000c0005adc      0x1ac interrupt.o
                                        0x1d8 (size before relaxing)
 .eh_frame      0x00000000c0005c88       0x94 timer.o
                                         0xd4 (size before relaxing)
 .eh_frame      0x00000000c0005d1c       0x1c debug.o
                                         0x48 (size before relaxing)
 .eh_frame      0x00000000c0005d38      0x13c memory.o
                                        0x17c (size before relaxing)
 .eh_frame      0x00000000c0005e74       0x90 bitmap.o
                                         0xbc (size before relaxing)
 .eh_frame      0x00000000c0005f04      0x168 string.o
                                        0x194 (size before relaxing)
 .eh_frame      0x00000000c000606c      0x174 thread.o
                                        0x1b4 (size before relaxing)
 .eh_frame      0x00000000c00061e0      0x148 list.o
                                        0x188 (size before relaxing)
 .eh_frame      0x00000000c0006328       0xd8 console.o
                                        0x118 (size before relaxing)
 .eh_frame      0x00000000c0006400       0xdc sync.o
                                        0x11c (size before relaxing)
 .eh_frame      0x00000000c00064dc       0x68 keyboard.o
                                         0xa8 (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges*)
                0x00000000c0008000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges*)

.tdata          0x00000000c0008000        0x0
                [!provide]                        PROVIDE (__tdata_start = .)
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c0008000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c0008000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c0008000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c0008000        0x0
 *(.got)
 .got           0x00000000c0008000        0x0 main.o
 *(.igot)
                0x00000000c0008ff4                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c0008000        0xc
 *(.got.plt)
 .got.plt       0x00000000c0008000        0xc main.o
                0x00000000c0008000                _GLOBAL_OFFSET_TABLE_
 *(.igot.plt)
 .igot.plt      0x00000000c000800c        0x0 main.o

.data           0x00000000c0008020      0x156
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c0008020        0x0 main.o
 .data          0x00000000c0008020        0x0 init.o
 .data          0x00000000c0008020        0x0 interrupt.o
 .data          0x00000000c0008020        0x0 timer.o
 .data          0x00000000c0008020       0xc0 kernel.o
                0x00000000c0008020                intr_entry_table
 .data          0x00000000c00080e0        0x8 print.o
 .data          0x00000000c00080e8        0x0 debug.o
 .data          0x00000000c00080e8        0x0 memory.o
 .data          0x00000000c00080e8        0x0 bitmap.o
 .data          0x00000000c00080e8        0x0 string.o
 .data          0x00000000c00080e8        0x0 thread.o
 .data          0x00000000c00080e8        0x0 list.o
 .data          0x00000000c00080e8        0x0 console.o
 .data          0x00000000c00080e8        0x0 sync.o
 *fill*         0x00000000c00080e8       0x18 
 .data          0x00000000c0008100       0x76 keyboard.o

.data1
 *(.data1)
                0x00000000c0008176                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c0008176                . = .
                0x00000000c0008176                __bss_start = .

.bss            0x00000000c0008180      0x394
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c0008180        0x0 main.o
 .bss           0x00000000c0008180        0x0 init.o
 .bss           0x00000000c0008180      0x180 interrupt.o
 .bss           0x00000000c0008300        0x0 timer.o
 .bss           0x00000000c0008300        0x0 debug.o
 .bss           0x00000000c0008300        0x0 memory.o
 .bss           0x00000000c0008300        0x0 bitmap.o
 .bss           0x00000000c0008300        0x0 string.o
 .bss           0x00000000c0008300        0x4 thread.o
 .bss           0x00000000c0008304        0x0 list.o
 .bss           0x00000000c0008304       0x1c console.o
 .bss           0x00000000c0008320        0x0 sync.o
 .bss           0x00000000c0008320       0x14 keyboard.o
 *(COMMON)
 *fill*         0x00000000c0008334        0xc 
 COMMON         0x00000000c0008340      0x180 interrupt.o
                0x00000000c0008340                intr_name
                0x00000000c0008400                idt_table
 COMMON         0x00000000c00084c0        0x4 timer.o
                0x00000000c00084c0                ticks
 COMMON         0x00000000c00084c4       0x2c memory.o
                0x00000000c00084c4                user_pool
                0x00000000c00084d4                kernel_vaddr
                0x00000000c00084e0                kernel_pool
 COMMON         0x00000000c00084f0       0x24 thread.o
                0x00000000c00084f0                thread_ready_list
                0x00000000c0008500                thread_all_list
                0x00000000c0008510                main_thread
                0x00000000c0008514                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c0008514                . = ALIGN (0x4)
                0x00000000c0008514                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c0008514                . = ALIGN (0x4)
                0x00000000c0008514                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c0008514                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 init.o
 .comment       0x0000000000000011       0x12 interrupt.o
 .comment       0x0000000000000011       0x12 timer.o
 .comment       0x0000000000000011       0x12 debug.o
 .comment       0x0000000000000011       0x12 memory.o
 .comment       0x0000000000000011       0x12 bitmap.o
 .comment       0x0000000000000011       0x12 string.o
 .comment       0x0000000000000011       0x12 thread.o
 .comment       0x0000000000000011       0x12 list.o
 .comment       0x0000000000000011       0x12 console.o
 .comment       0x0000000000000011       0x12 sync.o
 .comment       0x0000000000000011       0x12 keyboard.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.bin elf32-i386)
