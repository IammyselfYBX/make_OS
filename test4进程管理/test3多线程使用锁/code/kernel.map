
Allocating common symbols
Common symbol       size              file

thread_ready_list   0x10              thread.o
thread_all_list     0x10              thread.o
user_pool           0x10              memory.o
intr_name           0x84              interrupt.o
main_thread         0x4               thread.o
ticks               0x4               timer.o
kernel_vaddr        0xc               memory.o
idt_table           0x84              interrupt.o
kernel_pool         0x10              memory.o

Discarded input sections

 .group         0x0000000000000000        0x8 main.o
 .note.GNU-stack
                0x0000000000000000        0x0 main.o
 .group         0x0000000000000000        0x8 init.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 init.o
 .note.GNU-stack
                0x0000000000000000        0x0 init.o
 .group         0x0000000000000000        0x8 interrupt.o
 .group         0x0000000000000000        0x8 interrupt.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 interrupt.o
 .note.GNU-stack
                0x0000000000000000        0x0 interrupt.o
 .group         0x0000000000000000        0x8 timer.o
 .group         0x0000000000000000        0x8 timer.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 timer.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 timer.o
 .note.GNU-stack
                0x0000000000000000        0x0 timer.o
 .group         0x0000000000000000        0x8 debug.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 debug.o
 .note.GNU-stack
                0x0000000000000000        0x0 debug.o
 .group         0x0000000000000000        0x8 memory.o
 .group         0x0000000000000000        0x8 memory.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 memory.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 memory.o
 .note.GNU-stack
                0x0000000000000000        0x0 memory.o
 .group         0x0000000000000000        0x8 bitmap.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 bitmap.o
 .note.GNU-stack
                0x0000000000000000        0x0 bitmap.o
 .group         0x0000000000000000        0x8 string.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 string.o
 .note.GNU-stack
                0x0000000000000000        0x0 string.o
 .group         0x0000000000000000        0x8 thread.o
 .group         0x0000000000000000        0x8 thread.o
 .group         0x0000000000000000        0x8 thread.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 thread.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 thread.o
 .note.GNU-stack
                0x0000000000000000        0x0 thread.o
 .group         0x0000000000000000        0x8 list.o
 .group         0x0000000000000000        0x8 list.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 list.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 list.o
 .note.GNU-stack
                0x0000000000000000        0x0 list.o
 .group         0x0000000000000000        0x8 console.o
 .group         0x0000000000000000        0x8 console.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 console.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .group         0x0000000000000000        0x8 sync.o
 .group         0x0000000000000000        0x8 sync.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 sync.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 sync.o
 .note.GNU-stack
                0x0000000000000000        0x0 sync.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0xc0001500
LOAD main.o
LOAD init.o
LOAD interrupt.o
LOAD timer.o
LOAD kernel.o
LOAD print.o
LOAD debug.o
LOAD memory.o
LOAD bitmap.o
LOAD string.o
LOAD thread.o
LOAD list.o
LOAD switch.o
LOAD console.o
LOAD sync.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x00000000080480d4                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x00000000080480d4        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x00000000080480d4        0x0 main.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x00000000080480d4        0x0 main.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x00000000080480d4        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x00000000080480d4        0x0 main.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)
                0x0000000008049000                . = ALIGN (CONSTANT (MAXPAGESIZE))

.init
 *(SORT_NONE(.init))

.plt            0x0000000008049000        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008049000        0x0 main.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001500     0x291d
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500       0xd8 main.o
                0x00000000c0001500                main
                0x00000000c0001588                k_thread_a
                0x00000000c00015b0                k_thread_b
 .text.__x86.get_pc_thunk.bx
                0x00000000c00015d8        0x4 main.o
                0x00000000c00015d8                __x86.get_pc_thunk.bx
 .text          0x00000000c00015dc       0x43 init.o
                0x00000000c00015dc                init_all
 .text          0x00000000c000161f      0x53d interrupt.o
                0x00000000c0001a12                intr_enable
                0x00000000c0001a45                intr_disable
                0x00000000c0001a78                intr_set_status
                0x00000000c0001aa0                intr_get_status
                0x00000000c0001ac7                register_handler
                0x00000000c0001af0                idt_init
 .text.__x86.get_pc_thunk.ax
                0x00000000c0001b5c        0x4 interrupt.o
                0x00000000c0001b5c                __x86.get_pc_thunk.ax
 .text          0x00000000c0001b60      0x1ba timer.o
                0x00000000c0001cb2                timer_init
 *fill*         0x00000000c0001d1a        0x6 
 .text          0x00000000c0001d20      0x393 kernel.o
                0x00000000c0001d20                intr_exit
 *fill*         0x00000000c00020b3        0xd 
 .text          0x00000000c00020c0      0x172 print.o
                0x00000000c00020c0                put_str
                0x00000000c00020de                put_char
                0x00000000c00021ab                put_int
                0x00000000c000220e                set_cursor
 .text          0x00000000c0002232       0xf4 debug.o
                0x00000000c0002232                panic_spin
 .text          0x00000000c0002326      0x64b memory.o
                0x00000000c00023bf                pte_ptr
                0x00000000c00023f9                pde_ptr
                0x00000000c00025ba                malloc_page
                0x00000000c0002690                get_kernel_pages
                0x00000000c000291d                mem_init
 .text          0x00000000c0002971      0x28d bitmap.o
                0x00000000c0002971                bitmap_init
                0x00000000c00029a4                bitmap_scan_test
                0x00000000c00029ee                bitmap_scan
                0x00000000c0002b36                bitmap_set
 .text          0x00000000c0002bfe      0x4aa string.o
                0x00000000c0002bfe                memset
                0x00000000c0002c67                memcpy
                0x00000000c0002cde                memcmp
                0x00000000c0002d77                strcpy
                0x00000000c0002de2                strlen
                0x00000000c0002e3f                strcmp
                0x00000000c0002ece                strchr
                0x00000000c0002f3c                strrchr
                0x00000000c0002fb0                strcat
                0x00000000c0003030                strchrs
 .text          0x00000000c00030a8      0x64b thread.o
                0x00000000c00030a8                running_thread
                0x00000000c00030f3                thread_create
                0x00000000c0003177                init_thread
                0x00000000c000321c                thread_start
                0x00000000c00033b9                schedule
                0x00000000c00034f5                thread_block
                0x00000000c000356d                thread_unblock
                0x00000000c000368e                thread_init
 .text.__x86.get_pc_thunk.dx
                0x00000000c00036f3        0x4 thread.o
                0x00000000c00036f3                __x86.get_pc_thunk.dx
 .text          0x00000000c00036f7      0x25f list.o
                0x00000000c00036f7                list_init
                0x00000000c000372f                list_insert_before
                0x00000000c0003783                list_push
                0x00000000c00037ab                list_append
                0x00000000c00037d3                list_remove
                0x00000000c000381c                list_pop
                0x00000000c0003848                elem_find
                0x00000000c000388d                list_traversal
                0x00000000c00038f4                list_len
                0x00000000c0003933                list_empty
 *fill*         0x00000000c0003956        0xa 
 .text          0x00000000c0003960       0x15 switch.o
                0x00000000c0003960                switch_to
 .text          0x00000000c0003975      0x119 console.o
                0x00000000c0003975                console_init
                0x00000000c00039a0                console_acquire
                0x00000000c00039cb                console_release
                0x00000000c00039f6                console_put_str
                0x00000000c0003a26                console_put_char
                0x00000000c0003a5e                console_put_int
 .text          0x00000000c0003a8e      0x38f sync.o
                0x00000000c0003a8e                sema_init
                0x00000000c0003ac8                lock_init
                0x00000000c0003b02                sema_down
                0x00000000c0003c1e                sema_up
                0x00000000c0003ce8                lock_acquire
                0x00000000c0003d6e                lock_release
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)
                0x00000000c0004000                . = ALIGN (CONSTANT (MAXPAGESIZE))
                0x00000000c0004000                . = SEGMENT_START ("rodata-segment", (ALIGN (CONSTANT (MAXPAGESIZE)) + (. & (CONSTANT (MAXPAGESIZE) - 0x1))))

.rodata         0x00000000c0004000      0xa25
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c0004000       0x3b main.o
 .rodata        0x00000000c000403b        0xa init.o
 *fill*         0x00000000c0004045        0x3 
 .rodata        0x00000000c0004048      0x2cd interrupt.o
 *fill*         0x00000000c0004315        0x3 
 .rodata        0x00000000c0004318       0x6b timer.o
 .rodata        0x00000000c0004383       0x3f debug.o
 *fill*         0x00000000c00043c2        0x2 
 .rodata        0x00000000c00043c4      0x130 memory.o
 .rodata        0x00000000c00044f4       0x6b bitmap.o
 *fill*         0x00000000c000455f        0x1 
 .rodata        0x00000000c0004560       0xc4 string.o
 .rodata        0x00000000c0004624      0x2cb thread.o
 *fill*         0x00000000c00048ef        0x1 
 .rodata        0x00000000c00048f0      0x135 sync.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c0004a28      0xab0
 *(.eh_frame)
 .eh_frame      0x00000000c0004a28       0x8c main.o
 .eh_frame      0x00000000c0004ab4       0x24 init.o
                                         0x50 (size before relaxing)
 .eh_frame      0x00000000c0004ad8      0x1ac interrupt.o
                                        0x1d8 (size before relaxing)
 .eh_frame      0x00000000c0004c84       0x94 timer.o
                                         0xd4 (size before relaxing)
 .eh_frame      0x00000000c0004d18       0x1c debug.o
                                         0x48 (size before relaxing)
 .eh_frame      0x00000000c0004d34      0x13c memory.o
                                        0x17c (size before relaxing)
 .eh_frame      0x00000000c0004e70       0x90 bitmap.o
                                         0xbc (size before relaxing)
 .eh_frame      0x00000000c0004f00      0x168 string.o
                                        0x194 (size before relaxing)
 .eh_frame      0x00000000c0005068      0x174 thread.o
                                        0x1b4 (size before relaxing)
 .eh_frame      0x00000000c00051dc      0x148 list.o
                                        0x188 (size before relaxing)
 .eh_frame      0x00000000c0005324       0xd8 console.o
                                        0x118 (size before relaxing)
 .eh_frame      0x00000000c00053fc       0xdc sync.o
                                        0x11c (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges*)
                0x00000000c0007000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges*)

.tdata          0x00000000c0007000        0x0
                [!provide]                        PROVIDE (__tdata_start = .)
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c0007000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c0007000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c0007000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c0007000        0x0
 *(.got)
 .got           0x00000000c0007000        0x0 main.o
 *(.igot)
                0x00000000c0007ff4                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c0007000        0xc
 *(.got.plt)
 .got.plt       0x00000000c0007000        0xc main.o
                0x00000000c0007000                _GLOBAL_OFFSET_TABLE_
 *(.igot.plt)
 .igot.plt      0x00000000c000700c        0x0 main.o

.data           0x00000000c000700c       0x8c
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c000700c        0x0 main.o
 .data          0x00000000c000700c        0x0 init.o
 .data          0x00000000c000700c        0x0 interrupt.o
 .data          0x00000000c000700c        0x0 timer.o
 .data          0x00000000c000700c       0x84 kernel.o
                0x00000000c000700c                intr_entry_table
 .data          0x00000000c0007090        0x8 print.o
 .data          0x00000000c0007098        0x0 debug.o
 .data          0x00000000c0007098        0x0 memory.o
 .data          0x00000000c0007098        0x0 bitmap.o
 .data          0x00000000c0007098        0x0 string.o
 .data          0x00000000c0007098        0x0 thread.o
 .data          0x00000000c0007098        0x0 list.o
 .data          0x00000000c0007098        0x0 console.o
 .data          0x00000000c0007098        0x0 sync.o

.data1
 *(.data1)
                0x00000000c0007098                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c0007098                . = .
                0x00000000c0007098                __bss_start = .

.bss            0x00000000c00070a0      0x2b8
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c00070a0        0x0 main.o
 .bss           0x00000000c00070a0        0x0 init.o
 .bss           0x00000000c00070a0      0x108 interrupt.o
 .bss           0x00000000c00071a8        0x0 timer.o
 .bss           0x00000000c00071a8        0x0 debug.o
 .bss           0x00000000c00071a8        0x0 memory.o
 .bss           0x00000000c00071a8        0x0 bitmap.o
 .bss           0x00000000c00071a8        0x0 string.o
 .bss           0x00000000c00071a8        0x4 thread.o
 .bss           0x00000000c00071ac        0x0 list.o
 .bss           0x00000000c00071ac       0x1c console.o
 .bss           0x00000000c00071c8        0x0 sync.o
 *(COMMON)
 *fill*         0x00000000c00071c8       0x18 
 COMMON         0x00000000c00071e0      0x124 interrupt.o
                0x00000000c00071e0                intr_name
                0x00000000c0007280                idt_table
 COMMON         0x00000000c0007304        0x4 timer.o
                0x00000000c0007304                ticks
 COMMON         0x00000000c0007308       0x2c memory.o
                0x00000000c0007308                user_pool
                0x00000000c0007318                kernel_vaddr
                0x00000000c0007324                kernel_pool
 COMMON         0x00000000c0007334       0x24 thread.o
                0x00000000c0007334                thread_ready_list
                0x00000000c0007344                thread_all_list
                0x00000000c0007354                main_thread
                0x00000000c0007358                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c0007358                . = ALIGN (0x4)
                0x00000000c0007358                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c0007358                . = ALIGN (0x4)
                0x00000000c0007358                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c0007358                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 init.o
 .comment       0x0000000000000011       0x12 interrupt.o
 .comment       0x0000000000000011       0x12 timer.o
 .comment       0x0000000000000011       0x12 debug.o
 .comment       0x0000000000000011       0x12 memory.o
 .comment       0x0000000000000011       0x12 bitmap.o
 .comment       0x0000000000000011       0x12 string.o
 .comment       0x0000000000000011       0x12 thread.o
 .comment       0x0000000000000011       0x12 list.o
 .comment       0x0000000000000011       0x12 console.o
 .comment       0x0000000000000011       0x12 sync.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.bin elf32-i386)
