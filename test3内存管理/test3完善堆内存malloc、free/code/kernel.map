
Allocating common symbols
Common symbol       size              file

kbd_buf             0x6c              keyboard.o
thread_ready_list   0x10              thread.o
thread_all_list     0x10              thread.o
user_pool           0x2c              memory.o
k_block_descs       0xa8              memory.o
intr_name           0x204             interrupt.o
main_thread         0x4               thread.o
ticks               0x4               timer.o
kernel_vaddr        0xc               memory.o
syscall_table       0x80              syscall-init.o
idt_table           0x204             interrupt.o
kernel_pool         0x2c              memory.o
pid_lock            0x1c              thread.o

Discarded input sections

 .group         0x0000000000000000        0x8 main.o
 .note.GNU-stack
                0x0000000000000000        0x0 main.o
 .group         0x0000000000000000        0x8 init.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 init.o
 .note.GNU-stack
                0x0000000000000000        0x0 init.o
 .group         0x0000000000000000        0x8 interrupt.o
 .group         0x0000000000000000        0x8 interrupt.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 interrupt.o
 .note.GNU-stack
                0x0000000000000000        0x0 interrupt.o
 .group         0x0000000000000000        0x8 timer.o
 .group         0x0000000000000000        0x8 timer.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 timer.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 timer.o
 .note.GNU-stack
                0x0000000000000000        0x0 timer.o
 .group         0x0000000000000000        0x8 debug.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 debug.o
 .note.GNU-stack
                0x0000000000000000        0x0 debug.o
 .group         0x0000000000000000        0x8 memory.o
 .group         0x0000000000000000        0x8 memory.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 memory.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 memory.o
 .note.GNU-stack
                0x0000000000000000        0x0 memory.o
 .group         0x0000000000000000        0x8 bitmap.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 bitmap.o
 .note.GNU-stack
                0x0000000000000000        0x0 bitmap.o
 .group         0x0000000000000000        0x8 string.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 string.o
 .note.GNU-stack
                0x0000000000000000        0x0 string.o
 .group         0x0000000000000000        0x8 thread.o
 .group         0x0000000000000000        0x8 thread.o
 .group         0x0000000000000000        0x8 thread.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 thread.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 thread.o
 .note.GNU-stack
                0x0000000000000000        0x0 thread.o
 .group         0x0000000000000000        0x8 list.o
 .group         0x0000000000000000        0x8 list.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 list.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 list.o
 .note.GNU-stack
                0x0000000000000000        0x0 list.o
 .group         0x0000000000000000        0x8 console.o
 .group         0x0000000000000000        0x8 console.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 console.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .group         0x0000000000000000        0x8 sync.o
 .group         0x0000000000000000        0x8 sync.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 sync.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 sync.o
 .note.GNU-stack
                0x0000000000000000        0x0 sync.o
 .group         0x0000000000000000        0x8 keyboard.o
 .group         0x0000000000000000        0x8 keyboard.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 keyboard.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .group         0x0000000000000000        0x8 ioqueue.o
 .group         0x0000000000000000        0x8 ioqueue.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 ioqueue.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 ioqueue.o
 .note.GNU-stack
                0x0000000000000000        0x0 ioqueue.o
 .group         0x0000000000000000        0x8 tss.o
 .group         0x0000000000000000        0x8 tss.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 tss.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 tss.o
 .note.GNU-stack
                0x0000000000000000        0x0 tss.o
 .group         0x0000000000000000        0x8 process.o
 .group         0x0000000000000000        0x8 process.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 process.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 process.o
 .note.GNU-stack
                0x0000000000000000        0x0 process.o
 .group         0x0000000000000000        0x8 syscall.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 syscall.o
 .note.GNU-stack
                0x0000000000000000        0x0 syscall.o
 .group         0x0000000000000000        0x8 syscall-init.o
 .group         0x0000000000000000        0x8 syscall-init.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 syscall-init.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 syscall-init.o
 .note.GNU-stack
                0x0000000000000000        0x0 syscall-init.o
 .group         0x0000000000000000        0x8 stdio.o
 .group         0x0000000000000000        0x8 stdio.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 stdio.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 stdio.o
 .note.GNU-stack
                0x0000000000000000        0x0 stdio.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0xc0001500
LOAD main.o
LOAD init.o
LOAD interrupt.o
LOAD timer.o
LOAD kernel.o
LOAD print.o
LOAD debug.o
LOAD memory.o
LOAD bitmap.o
LOAD string.o
LOAD thread.o
LOAD list.o
LOAD switch.o
LOAD console.o
LOAD sync.o
LOAD keyboard.o
LOAD ioqueue.o
LOAD tss.o
LOAD process.o
LOAD syscall.o
LOAD syscall-init.o
LOAD stdio.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x00000000080480d4                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x00000000080480d4        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x00000000080480d4        0x0 main.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x00000000080480d4        0x0 main.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x00000000080480d4        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x00000000080480d4        0x0 main.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)
                0x0000000008049000                . = ALIGN (CONSTANT (MAXPAGESIZE))

.init
 *(SORT_NONE(.init))

.plt            0x0000000008049000        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008049000        0x0 main.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001500     0x4c28
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500      0x3da main.o
                0x00000000c0001500                main
                0x00000000c00015a8                k_thread_a
                0x00000000c000169a                k_thread_b
                0x00000000c000178c                u_prog_a
                0x00000000c0001833                u_prog_b
 .text.__x86.get_pc_thunk.bx
                0x00000000c00018da        0x4 main.o
                0x00000000c00018da                __x86.get_pc_thunk.bx
 .text          0x00000000c00018de       0x52 init.o
                0x00000000c00018de                init_all
 .text          0x00000000c0001930      0x571 interrupt.o
                0x00000000c0001d57                intr_enable
                0x00000000c0001d8a                intr_disable
                0x00000000c0001dbd                intr_set_status
                0x00000000c0001de5                intr_get_status
                0x00000000c0001e0c                register_handler
                0x00000000c0001e35                idt_init
 .text.__x86.get_pc_thunk.ax
                0x00000000c0001ea1        0x4 interrupt.o
                0x00000000c0001ea1                __x86.get_pc_thunk.ax
 .text          0x00000000c0001ea5      0x1bd timer.o
                0x00000000c0001ffa                timer_init
 *fill*         0x00000000c0002062        0xe 
 .text          0x00000000c0002070      0x55b kernel.o
                0x00000000c0002070                intr_exit
                0x00000000c00025a7                syscall_handler
 *fill*         0x00000000c00025cb        0x5 
 .text          0x00000000c00025d0      0x172 print.o
                0x00000000c00025d0                put_str
                0x00000000c00025ee                put_char
                0x00000000c00026bb                put_int
                0x00000000c000271e                set_cursor
 .text          0x00000000c0002742       0xf4 debug.o
                0x00000000c0002742                panic_spin
 .text          0x00000000c0002836     0x1348 memory.o
                0x00000000c0002969                pte_ptr
                0x00000000c00029a3                pde_ptr
                0x00000000c0002b5a                malloc_page
                0x00000000c0002c33                get_kernel_pages
                0x00000000c0002ca7                get_user_pages
                0x00000000c0002d1b                get_a_page
                0x00000000c0002eb7                addr_v2p
                0x00000000c0002f28                sys_malloc
                0x00000000c0003280                pfree
                0x00000000c00033f6                mfree_page
                0x00000000c00035f5                sys_free
                0x00000000c0003a74                block_desc_init
                0x00000000c0003b18                mem_init
 .text          0x00000000c0003b7e      0x28d bitmap.o
                0x00000000c0003b7e                bitmap_init
                0x00000000c0003bb1                bitmap_scan_test
                0x00000000c0003bfb                bitmap_scan
                0x00000000c0003d43                bitmap_set
 .text          0x00000000c0003e0b      0x4aa string.o
                0x00000000c0003e0b                memset
                0x00000000c0003e74                memcpy
                0x00000000c0003eeb                memcmp
                0x00000000c0003f84                strcpy
                0x00000000c0003fef                strlen
                0x00000000c000404c                strcmp
                0x00000000c00040db                strchr
                0x00000000c0004149                strrchr
                0x00000000c00041bd                strcat
                0x00000000c000423d                strchrs
 .text          0x00000000c00042b5      0x6d3 thread.o
                0x00000000c00042b5                running_thread
                0x00000000c0004353                thread_create
                0x00000000c00043d7                init_thread
                0x00000000c000448e                thread_start
                0x00000000c000462b                schedule
                0x00000000c0004778                thread_block
                0x00000000c00047f0                thread_unblock
                0x00000000c0004911                thread_init
 .text.__x86.get_pc_thunk.dx
                0x00000000c0004988        0x4 thread.o
                0x00000000c0004988                __x86.get_pc_thunk.dx
 .text          0x00000000c000498c      0x25f list.o
                0x00000000c000498c                list_init
                0x00000000c00049c4                list_insert_before
                0x00000000c0004a18                list_push
                0x00000000c0004a40                list_append
                0x00000000c0004a68                list_remove
                0x00000000c0004ab1                list_pop
                0x00000000c0004add                elem_find
                0x00000000c0004b22                list_traversal
                0x00000000c0004b89                list_len
                0x00000000c0004bc8                list_empty
 *fill*         0x00000000c0004beb        0x5 
 .text          0x00000000c0004bf0       0x15 switch.o
                0x00000000c0004bf0                switch_to
 .text          0x00000000c0004c05      0x119 console.o
                0x00000000c0004c05                console_init
                0x00000000c0004c30                console_acquire
                0x00000000c0004c5b                console_release
                0x00000000c0004c86                console_put_str
                0x00000000c0004cb6                console_put_char
                0x00000000c0004cee                console_put_int
 .text          0x00000000c0004d1e      0x38f sync.o
                0x00000000c0004d1e                sema_init
                0x00000000c0004d58                lock_init
                0x00000000c0004d92                sema_down
                0x00000000c0004eae                sema_up
                0x00000000c0004f78                lock_acquire
                0x00000000c0004ffe                lock_release
 .text          0x00000000c00050ad      0x33e keyboard.o
                0x00000000c0005389                keyboard_init
 .text          0x00000000c00053eb      0x37e ioqueue.o
                0x00000000c00053eb                ioqueue_init
                0x00000000c0005465                ioq_full
                0x00000000c00055ce                ioq_getchar
                0x00000000c000569a                ioq_putchar
 .text          0x00000000c0005769      0x1b2 tss.o
                0x00000000c0005769                update_tss_esp
                0x00000000c00057fa                tss_init
 .text          0x00000000c000591b      0x3dc process.o
                0x00000000c000591b                start_process
                0x00000000c0005a2f                page_dir_activate
                0x00000000c0005a74                process_activate
                0x00000000c0005ad7                create_page_dir
                0x00000000c0005b60                create_user_vaddr_bitmap
                0x00000000c0005bb9                process_execute
 .text          0x00000000c0005cf7       0x98 syscall.o
                0x00000000c0005cf7                getpid
                0x00000000c0005d16                write
                0x00000000c0005d3f                malloc
                0x00000000c0005d68                free
 .text          0x00000000c0005d8f       0xcd syscall-init.o
                0x00000000c0005d8f                sys_getpid
                0x00000000c0005db2                sys_write
                0x00000000c0005de5                syscall_init
 .text          0x00000000c0005e5c      0x2cc stdio.o
                0x00000000c0005eed                vsprintf
                0x00000000c000607b                sprintf
                0x00000000c00060b5                printf
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)
                0x00000000c0007000                . = ALIGN (CONSTANT (MAXPAGESIZE))
                0x00000000c0007000                . = SEGMENT_START ("rodata-segment", (ALIGN (CONSTANT (MAXPAGESIZE)) + (. & (CONSTANT (MAXPAGESIZE) - 0x1))))

.rodata         0x00000000c0007000      0xf53
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c0007000       0xcc main.o
 .rodata        0x00000000c00070cc        0xa init.o
 *fill*         0x00000000c00070d6        0x2 
 .rodata        0x00000000c00070d8      0x2cd interrupt.o
 *fill*         0x00000000c00073a5        0x3 
 .rodata        0x00000000c00073a8       0x6b timer.o
 .rodata        0x00000000c0007413       0x3f debug.o
 *fill*         0x00000000c0007452        0x2 
 .rodata        0x00000000c0007454      0x3bd memory.o
 *fill*         0x00000000c0007811        0x3 
 .rodata        0x00000000c0007814       0x6b bitmap.o
 *fill*         0x00000000c000787f        0x1 
 .rodata        0x00000000c0007880       0xc4 string.o
 .rodata        0x00000000c0007944      0x2cb thread.o
 *fill*         0x00000000c0007c0f        0x1 
 .rodata        0x00000000c0007c10      0x135 sync.o
 .rodata        0x00000000c0007d45       0x36 keyboard.o
 *fill*         0x00000000c0007d7b        0x1 
 .rodata        0x00000000c0007d7c       0xa8 ioqueue.o
 .rodata        0x00000000c0007e24       0x27 tss.o
 *fill*         0x00000000c0007e4b        0x1 
 .rodata        0x00000000c0007e4c       0xe0 process.o
 .rodata        0x00000000c0007f2c       0x27 syscall-init.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c0007f54     0x10fc
 *(.eh_frame)
 .eh_frame      0x00000000c0007f54       0xc4 main.o
 .eh_frame      0x00000000c0008018       0x24 init.o
                                         0x50 (size before relaxing)
 .eh_frame      0x00000000c000803c      0x1ac interrupt.o
                                        0x1d8 (size before relaxing)
 .eh_frame      0x00000000c00081e8       0x94 timer.o
                                         0xd4 (size before relaxing)
 .eh_frame      0x00000000c000827c       0x1c debug.o
                                         0x48 (size before relaxing)
 .eh_frame      0x00000000c0008298      0x2dc memory.o
                                        0x31c (size before relaxing)
 .eh_frame      0x00000000c0008574       0x90 bitmap.o
                                         0xbc (size before relaxing)
 .eh_frame      0x00000000c0008604      0x168 string.o
                                        0x194 (size before relaxing)
 .eh_frame      0x00000000c000876c      0x198 thread.o
                                        0x1d8 (size before relaxing)
 .eh_frame      0x00000000c0008904      0x148 list.o
                                        0x188 (size before relaxing)
 .eh_frame      0x00000000c0008a4c       0xd8 console.o
                                        0x118 (size before relaxing)
 .eh_frame      0x00000000c0008b24       0xdc sync.o
                                        0x11c (size before relaxing)
 .eh_frame      0x00000000c0008c00       0x68 keyboard.o
                                         0xa8 (size before relaxing)
 .eh_frame      0x00000000c0008c68      0x11c ioqueue.o
                                        0x15c (size before relaxing)
 .eh_frame      0x00000000c0008d84       0x6c tss.o
                                         0xac (size before relaxing)
 .eh_frame      0x00000000c0008df0       0xd8 process.o
                                        0x118 (size before relaxing)
 .eh_frame      0x00000000c0008ec8       0x8c syscall.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000c0008f54       0x6c syscall-init.o
                                         0xac (size before relaxing)
 .eh_frame      0x00000000c0008fc0       0x90 stdio.o
                                         0xd0 (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges*)
                0x00000000c000b000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges*)

.tdata          0x00000000c000b000        0x0
                [!provide]                        PROVIDE (__tdata_start = .)
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c000b000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c000b000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c000b000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c000b000        0x0
 *(.got)
 .got           0x00000000c000b000        0x0 main.o
 *(.igot)
                0x00000000c000bff4                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c000b000        0xc
 *(.got.plt)
 .got.plt       0x00000000c000b000        0xc main.o
                0x00000000c000b000                _GLOBAL_OFFSET_TABLE_
 *(.igot.plt)
 .igot.plt      0x00000000c000b00c        0x0 main.o

.data           0x00000000c000b020      0x156
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c000b020        0x0 main.o
 .data          0x00000000c000b020        0x0 init.o
 .data          0x00000000c000b020        0x0 interrupt.o
 .data          0x00000000c000b020        0x0 timer.o
 .data          0x00000000c000b020       0xc0 kernel.o
                0x00000000c000b020                intr_entry_table
 .data          0x00000000c000b0e0        0x8 print.o
 .data          0x00000000c000b0e8        0x0 debug.o
 .data          0x00000000c000b0e8        0x0 memory.o
 .data          0x00000000c000b0e8        0x0 bitmap.o
 .data          0x00000000c000b0e8        0x0 string.o
 .data          0x00000000c000b0e8        0x0 thread.o
 .data          0x00000000c000b0e8        0x0 list.o
 .data          0x00000000c000b0e8        0x0 console.o
 .data          0x00000000c000b0e8        0x0 sync.o
 *fill*         0x00000000c000b0e8       0x18 
 .data          0x00000000c000b100       0x76 keyboard.o
 .data          0x00000000c000b176        0x0 ioqueue.o
 .data          0x00000000c000b176        0x0 tss.o
 .data          0x00000000c000b176        0x0 process.o
 .data          0x00000000c000b176        0x0 syscall.o
 .data          0x00000000c000b176        0x0 syscall-init.o
 .data          0x00000000c000b176        0x0 stdio.o

.data1
 *(.data1)
                0x00000000c000b176                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c000b176                . = .
                0x00000000c000b176                __bss_start = .

.bss            0x00000000c000b180      0xb80
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c000b180        0x0 main.o
 .bss           0x00000000c000b180        0x0 init.o
 .bss           0x00000000c000b180      0x408 interrupt.o
 .bss           0x00000000c000b588        0x0 timer.o
 .bss           0x00000000c000b588        0x0 debug.o
 .bss           0x00000000c000b588        0x0 memory.o
 .bss           0x00000000c000b588        0x0 bitmap.o
 .bss           0x00000000c000b588        0x0 string.o
 .bss           0x00000000c000b588        0x6 thread.o
 .bss           0x00000000c000b58e        0x0 list.o
 *fill*         0x00000000c000b58e        0x2 
 .bss           0x00000000c000b590       0x1c console.o
 .bss           0x00000000c000b5ac        0x0 sync.o
 .bss           0x00000000c000b5ac       0x14 keyboard.o
 .bss           0x00000000c000b5c0        0x0 ioqueue.o
 .bss           0x00000000c000b5c0       0x6c tss.o
 .bss           0x00000000c000b62c        0x0 process.o
 .bss           0x00000000c000b62c        0x0 syscall.o
 .bss           0x00000000c000b62c        0x0 syscall-init.o
 .bss           0x00000000c000b62c        0x0 stdio.o
 *(COMMON)
 *fill*         0x00000000c000b62c       0x14 
 COMMON         0x00000000c000b640      0x424 interrupt.o
                0x00000000c000b640                intr_name
                0x00000000c000b860                idt_table
 COMMON         0x00000000c000ba64        0x4 timer.o
                0x00000000c000ba64                ticks
 *fill*         0x00000000c000ba68       0x18 
 COMMON         0x00000000c000ba80      0x12c memory.o
                0x00000000c000ba80                user_pool
                0x00000000c000bac0                k_block_descs
                0x00000000c000bb68                kernel_vaddr
                0x00000000c000bb80                kernel_pool
 COMMON         0x00000000c000bbac       0x40 thread.o
                0x00000000c000bbac                thread_ready_list
                0x00000000c000bbbc                thread_all_list
                0x00000000c000bbcc                main_thread
                0x00000000c000bbd0                pid_lock
 *fill*         0x00000000c000bbec       0x14 
 COMMON         0x00000000c000bc00       0x6c keyboard.o
                0x00000000c000bc00                kbd_buf
 *fill*         0x00000000c000bc6c       0x14 
 COMMON         0x00000000c000bc80       0x80 syscall-init.o
                0x00000000c000bc80                syscall_table
                0x00000000c000bd00                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c000bd00                . = ALIGN (0x4)
                0x00000000c000bd00                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c000bd00                . = ALIGN (0x4)
                0x00000000c000bd00                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c000bd00                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 init.o
 .comment       0x0000000000000011       0x12 interrupt.o
 .comment       0x0000000000000011       0x12 timer.o
 .comment       0x0000000000000011       0x12 debug.o
 .comment       0x0000000000000011       0x12 memory.o
 .comment       0x0000000000000011       0x12 bitmap.o
 .comment       0x0000000000000011       0x12 string.o
 .comment       0x0000000000000011       0x12 thread.o
 .comment       0x0000000000000011       0x12 list.o
 .comment       0x0000000000000011       0x12 console.o
 .comment       0x0000000000000011       0x12 sync.o
 .comment       0x0000000000000011       0x12 keyboard.o
 .comment       0x0000000000000011       0x12 ioqueue.o
 .comment       0x0000000000000011       0x12 tss.o
 .comment       0x0000000000000011       0x12 process.o
 .comment       0x0000000000000011       0x12 syscall.o
 .comment       0x0000000000000011       0x12 syscall-init.o
 .comment       0x0000000000000011       0x12 stdio.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.bin elf32-i386)
