
Allocating common symbols
Common symbol       size              file

kbd_buf             0x6c              keyboard.o
thread_ready_list   0x10              thread.o
thread_all_list     0x10              thread.o
user_pool           0x2c              memory.o
intr_name           0x204             interrupt.o
main_thread         0x4               thread.o
ticks               0x4               timer.o
kernel_vaddr        0xc               memory.o
syscall_table       0x80              syscall-init.o
idt_table           0x204             interrupt.o
kernel_pool         0x2c              memory.o
pid_lock            0x1c              thread.o

Discarded input sections

 .group         0x0000000000000000        0x8 main.o
 .note.GNU-stack
                0x0000000000000000        0x0 main.o
 .group         0x0000000000000000        0x8 init.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 init.o
 .note.GNU-stack
                0x0000000000000000        0x0 init.o
 .group         0x0000000000000000        0x8 interrupt.o
 .group         0x0000000000000000        0x8 interrupt.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 interrupt.o
 .note.GNU-stack
                0x0000000000000000        0x0 interrupt.o
 .group         0x0000000000000000        0x8 timer.o
 .group         0x0000000000000000        0x8 timer.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 timer.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 timer.o
 .note.GNU-stack
                0x0000000000000000        0x0 timer.o
 .group         0x0000000000000000        0x8 debug.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 debug.o
 .note.GNU-stack
                0x0000000000000000        0x0 debug.o
 .group         0x0000000000000000        0x8 memory.o
 .group         0x0000000000000000        0x8 memory.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 memory.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 memory.o
 .note.GNU-stack
                0x0000000000000000        0x0 memory.o
 .group         0x0000000000000000        0x8 bitmap.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 bitmap.o
 .note.GNU-stack
                0x0000000000000000        0x0 bitmap.o
 .group         0x0000000000000000        0x8 string.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 string.o
 .note.GNU-stack
                0x0000000000000000        0x0 string.o
 .group         0x0000000000000000        0x8 thread.o
 .group         0x0000000000000000        0x8 thread.o
 .group         0x0000000000000000        0x8 thread.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 thread.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 thread.o
 .note.GNU-stack
                0x0000000000000000        0x0 thread.o
 .group         0x0000000000000000        0x8 list.o
 .group         0x0000000000000000        0x8 list.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 list.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 list.o
 .note.GNU-stack
                0x0000000000000000        0x0 list.o
 .group         0x0000000000000000        0x8 console.o
 .group         0x0000000000000000        0x8 console.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 console.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .group         0x0000000000000000        0x8 sync.o
 .group         0x0000000000000000        0x8 sync.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 sync.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 sync.o
 .note.GNU-stack
                0x0000000000000000        0x0 sync.o
 .group         0x0000000000000000        0x8 keyboard.o
 .group         0x0000000000000000        0x8 keyboard.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 keyboard.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .group         0x0000000000000000        0x8 ioqueue.o
 .group         0x0000000000000000        0x8 ioqueue.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 ioqueue.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 ioqueue.o
 .note.GNU-stack
                0x0000000000000000        0x0 ioqueue.o
 .group         0x0000000000000000        0x8 tss.o
 .group         0x0000000000000000        0x8 tss.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 tss.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 tss.o
 .note.GNU-stack
                0x0000000000000000        0x0 tss.o
 .group         0x0000000000000000        0x8 process.o
 .group         0x0000000000000000        0x8 process.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 process.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 process.o
 .note.GNU-stack
                0x0000000000000000        0x0 process.o
 .group         0x0000000000000000        0x8 syscall.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 syscall.o
 .note.GNU-stack
                0x0000000000000000        0x0 syscall.o
 .group         0x0000000000000000        0x8 syscall-init.o
 .group         0x0000000000000000        0x8 syscall-init.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 syscall-init.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 syscall-init.o
 .note.GNU-stack
                0x0000000000000000        0x0 syscall-init.o
 .group         0x0000000000000000        0x8 stdio.o
 .group         0x0000000000000000        0x8 stdio.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 stdio.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 stdio.o
 .note.GNU-stack
                0x0000000000000000        0x0 stdio.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0xc0001500
LOAD main.o
LOAD init.o
LOAD interrupt.o
LOAD timer.o
LOAD kernel.o
LOAD print.o
LOAD debug.o
LOAD memory.o
LOAD bitmap.o
LOAD string.o
LOAD thread.o
LOAD list.o
LOAD switch.o
LOAD console.o
LOAD sync.o
LOAD keyboard.o
LOAD ioqueue.o
LOAD tss.o
LOAD process.o
LOAD syscall.o
LOAD syscall-init.o
LOAD stdio.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x00000000080480d4                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x00000000080480d4        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x00000000080480d4        0x0 main.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x00000000080480d4        0x0 main.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x00000000080480d4        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x00000000080480d4        0x0 main.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)
                0x0000000008049000                . = ALIGN (CONSTANT (MAXPAGESIZE))

.init
 *(SORT_NONE(.init))

.plt            0x0000000008049000        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008049000        0x0 main.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001500     0x3fa8
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500      0x1da main.o
                0x00000000c0001500                main
                0x00000000c00015d8                k_thread_a
                0x00000000c0001622                k_thread_b
                0x00000000c000166c                u_prog_a
                0x00000000c00016a3                u_prog_b
 .text.__x86.get_pc_thunk.bx
                0x00000000c00016da        0x4 main.o
                0x00000000c00016da                __x86.get_pc_thunk.bx
 .text          0x00000000c00016de       0x52 init.o
                0x00000000c00016de                init_all
 .text          0x00000000c0001730      0x571 interrupt.o
                0x00000000c0001b57                intr_enable
                0x00000000c0001b8a                intr_disable
                0x00000000c0001bbd                intr_set_status
                0x00000000c0001be5                intr_get_status
                0x00000000c0001c0c                register_handler
                0x00000000c0001c35                idt_init
 .text.__x86.get_pc_thunk.ax
                0x00000000c0001ca1        0x4 interrupt.o
                0x00000000c0001ca1                __x86.get_pc_thunk.ax
 .text          0x00000000c0001ca5      0x1ba timer.o
                0x00000000c0001df7                timer_init
 *fill*         0x00000000c0001e5f        0x1 
 .text          0x00000000c0001e60      0x55b kernel.o
                0x00000000c0001e60                intr_exit
                0x00000000c0002397                syscall_handler
 *fill*         0x00000000c00023bb        0x5 
 .text          0x00000000c00023c0      0x172 print.o
                0x00000000c00023c0                put_str
                0x00000000c00023de                put_char
                0x00000000c00024ab                put_int
                0x00000000c000250e                set_cursor
 .text          0x00000000c0002532       0xf4 debug.o
                0x00000000c0002532                panic_spin
 .text          0x00000000c0002626      0x960 memory.o
                0x00000000c0002759                pte_ptr
                0x00000000c0002793                pde_ptr
                0x00000000c000294a                malloc_page
                0x00000000c0002a23                get_kernel_pages
                0x00000000c0002a97                get_user_pages
                0x00000000c0002b05                get_a_page
                0x00000000c0002c8f                addr_v2p
                0x00000000c0002f32                mem_init
 .text          0x00000000c0002f86      0x28d bitmap.o
                0x00000000c0002f86                bitmap_init
                0x00000000c0002fb9                bitmap_scan_test
                0x00000000c0003003                bitmap_scan
                0x00000000c000314b                bitmap_set
 .text          0x00000000c0003213      0x4aa string.o
                0x00000000c0003213                memset
                0x00000000c000327c                memcpy
                0x00000000c00032f3                memcmp
                0x00000000c000338c                strcpy
                0x00000000c00033f7                strlen
                0x00000000c0003454                strcmp
                0x00000000c00034e3                strchr
                0x00000000c0003551                strrchr
                0x00000000c00035c5                strcat
                0x00000000c0003645                strchrs
 .text          0x00000000c00036bd      0x6cd thread.o
                0x00000000c00036bd                running_thread
                0x00000000c000375b                thread_create
                0x00000000c00037df                init_thread
                0x00000000c0003890                thread_start
                0x00000000c0003a2d                schedule
                0x00000000c0003b7a                thread_block
                0x00000000c0003bf2                thread_unblock
                0x00000000c0003d13                thread_init
 .text.__x86.get_pc_thunk.dx
                0x00000000c0003d8a        0x4 thread.o
                0x00000000c0003d8a                __x86.get_pc_thunk.dx
 .text          0x00000000c0003d8e      0x25f list.o
                0x00000000c0003d8e                list_init
                0x00000000c0003dc6                list_insert_before
                0x00000000c0003e1a                list_push
                0x00000000c0003e42                list_append
                0x00000000c0003e6a                list_remove
                0x00000000c0003eb3                list_pop
                0x00000000c0003edf                elem_find
                0x00000000c0003f24                list_traversal
                0x00000000c0003f8b                list_len
                0x00000000c0003fca                list_empty
 *fill*         0x00000000c0003fed        0x3 
 .text          0x00000000c0003ff0       0x15 switch.o
                0x00000000c0003ff0                switch_to
 .text          0x00000000c0004005      0x119 console.o
                0x00000000c0004005                console_init
                0x00000000c0004030                console_acquire
                0x00000000c000405b                console_release
                0x00000000c0004086                console_put_str
                0x00000000c00040b6                console_put_char
                0x00000000c00040ee                console_put_int
 .text          0x00000000c000411e      0x38f sync.o
                0x00000000c000411e                sema_init
                0x00000000c0004158                lock_init
                0x00000000c0004192                sema_down
                0x00000000c00042ae                sema_up
                0x00000000c0004378                lock_acquire
                0x00000000c00043fe                lock_release
 .text          0x00000000c00044ad      0x33e keyboard.o
                0x00000000c0004789                keyboard_init
 .text          0x00000000c00047eb      0x37e ioqueue.o
                0x00000000c00047eb                ioqueue_init
                0x00000000c0004865                ioq_full
                0x00000000c00049ce                ioq_getchar
                0x00000000c0004a9a                ioq_putchar
 .text          0x00000000c0004b69      0x1b2 tss.o
                0x00000000c0004b69                update_tss_esp
                0x00000000c0004bfa                tss_init
 .text          0x00000000c0004d1b      0x3ca process.o
                0x00000000c0004d1b                start_process
                0x00000000c0004e2f                page_dir_activate
                0x00000000c0004e74                process_activate
                0x00000000c0004ed7                create_page_dir
                0x00000000c0004f60                create_user_vaddr_bitmap
                0x00000000c0004fb9                process_execute
 .text          0x00000000c00050e5       0x48 syscall.o
                0x00000000c00050e5                getpid
                0x00000000c0005104                write
 .text          0x00000000c000512d       0xaf syscall-init.o
                0x00000000c000512d                sys_getpid
                0x00000000c0005150                sys_write
                0x00000000c0005183                syscall_init
 .text          0x00000000c00051dc      0x2cc stdio.o
                0x00000000c000526d                vsprintf
                0x00000000c00053fb                sprintf
                0x00000000c0005435                printf
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)
                0x00000000c0006000                . = ALIGN (CONSTANT (MAXPAGESIZE))
                0x00000000c0006000                . = SEGMENT_START ("rodata-segment", (ALIGN (CONSTANT (MAXPAGESIZE)) + (. & (CONSTANT (MAXPAGESIZE) - 0x1))))

.rodata         0x00000000c0006000      0xd5f
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c0006000       0xc0 main.o
 .rodata        0x00000000c00060c0        0xa init.o
 *fill*         0x00000000c00060ca        0x2 
 .rodata        0x00000000c00060cc      0x2cd interrupt.o
 *fill*         0x00000000c0006399        0x3 
 .rodata        0x00000000c000639c       0x6b timer.o
 .rodata        0x00000000c0006407       0x3f debug.o
 *fill*         0x00000000c0006446        0x2 
 .rodata        0x00000000c0006448      0x1d7 memory.o
 *fill*         0x00000000c000661f        0x1 
 .rodata        0x00000000c0006620       0x6b bitmap.o
 *fill*         0x00000000c000668b        0x1 
 .rodata        0x00000000c000668c       0xc4 string.o
 .rodata        0x00000000c0006750      0x2cb thread.o
 *fill*         0x00000000c0006a1b        0x1 
 .rodata        0x00000000c0006a1c      0x135 sync.o
 .rodata        0x00000000c0006b51       0x36 keyboard.o
 *fill*         0x00000000c0006b87        0x1 
 .rodata        0x00000000c0006b88       0xa8 ioqueue.o
 .rodata        0x00000000c0006c30       0x27 tss.o
 *fill*         0x00000000c0006c57        0x1 
 .rodata        0x00000000c0006c58       0xe0 process.o
 .rodata        0x00000000c0006d38       0x27 syscall-init.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c0006d60      0xf7c
 *(.eh_frame)
 .eh_frame      0x00000000c0006d60       0xc4 main.o
 .eh_frame      0x00000000c0006e24       0x24 init.o
                                         0x50 (size before relaxing)
 .eh_frame      0x00000000c0006e48      0x1ac interrupt.o
                                        0x1d8 (size before relaxing)
 .eh_frame      0x00000000c0006ff4       0x94 timer.o
                                         0xd4 (size before relaxing)
 .eh_frame      0x00000000c0007088       0x1c debug.o
                                         0x48 (size before relaxing)
 .eh_frame      0x00000000c00070a4      0x1a4 memory.o
                                        0x1e4 (size before relaxing)
 .eh_frame      0x00000000c0007248       0x90 bitmap.o
                                         0xbc (size before relaxing)
 .eh_frame      0x00000000c00072d8      0x168 string.o
                                        0x194 (size before relaxing)
 .eh_frame      0x00000000c0007440      0x198 thread.o
                                        0x1d8 (size before relaxing)
 .eh_frame      0x00000000c00075d8      0x148 list.o
                                        0x188 (size before relaxing)
 .eh_frame      0x00000000c0007720       0xd8 console.o
                                        0x118 (size before relaxing)
 .eh_frame      0x00000000c00077f8       0xdc sync.o
                                        0x11c (size before relaxing)
 .eh_frame      0x00000000c00078d4       0x68 keyboard.o
                                         0xa8 (size before relaxing)
 .eh_frame      0x00000000c000793c      0x11c ioqueue.o
                                        0x15c (size before relaxing)
 .eh_frame      0x00000000c0007a58       0x6c tss.o
                                         0xac (size before relaxing)
 .eh_frame      0x00000000c0007ac4       0xd8 process.o
                                        0x118 (size before relaxing)
 .eh_frame      0x00000000c0007b9c       0x44 syscall.o
                                         0x70 (size before relaxing)
 .eh_frame      0x00000000c0007be0       0x6c syscall-init.o
                                         0xac (size before relaxing)
 .eh_frame      0x00000000c0007c4c       0x90 stdio.o
                                         0xd0 (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges*)
                0x00000000c0009000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges*)

.tdata          0x00000000c0009000        0x0
                [!provide]                        PROVIDE (__tdata_start = .)
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c0009000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c0009000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c0009000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c0009000        0x0
 *(.got)
 .got           0x00000000c0009000        0x0 main.o
 *(.igot)
                0x00000000c0009ff4                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c0009000        0xc
 *(.got.plt)
 .got.plt       0x00000000c0009000        0xc main.o
                0x00000000c0009000                _GLOBAL_OFFSET_TABLE_
 *(.igot.plt)
 .igot.plt      0x00000000c000900c        0x0 main.o

.data           0x00000000c0009020      0x156
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c0009020        0x0 main.o
 .data          0x00000000c0009020        0x0 init.o
 .data          0x00000000c0009020        0x0 interrupt.o
 .data          0x00000000c0009020        0x0 timer.o
 .data          0x00000000c0009020       0xc0 kernel.o
                0x00000000c0009020                intr_entry_table
 .data          0x00000000c00090e0        0x8 print.o
 .data          0x00000000c00090e8        0x0 debug.o
 .data          0x00000000c00090e8        0x0 memory.o
 .data          0x00000000c00090e8        0x0 bitmap.o
 .data          0x00000000c00090e8        0x0 string.o
 .data          0x00000000c00090e8        0x0 thread.o
 .data          0x00000000c00090e8        0x0 list.o
 .data          0x00000000c00090e8        0x0 console.o
 .data          0x00000000c00090e8        0x0 sync.o
 *fill*         0x00000000c00090e8       0x18 
 .data          0x00000000c0009100       0x76 keyboard.o
 .data          0x00000000c0009176        0x0 ioqueue.o
 .data          0x00000000c0009176        0x0 tss.o
 .data          0x00000000c0009176        0x0 process.o
 .data          0x00000000c0009176        0x0 syscall.o
 .data          0x00000000c0009176        0x0 syscall-init.o
 .data          0x00000000c0009176        0x0 stdio.o

.data1
 *(.data1)
                0x00000000c0009176                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c0009176                . = .
                0x00000000c0009176                __bss_start = .

.bss            0x00000000c0009180      0xac0
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c0009180        0x0 main.o
 .bss           0x00000000c0009180        0x0 init.o
 .bss           0x00000000c0009180      0x408 interrupt.o
 .bss           0x00000000c0009588        0x0 timer.o
 .bss           0x00000000c0009588        0x0 debug.o
 .bss           0x00000000c0009588        0x0 memory.o
 .bss           0x00000000c0009588        0x0 bitmap.o
 .bss           0x00000000c0009588        0x0 string.o
 .bss           0x00000000c0009588        0x6 thread.o
 .bss           0x00000000c000958e        0x0 list.o
 *fill*         0x00000000c000958e        0x2 
 .bss           0x00000000c0009590       0x1c console.o
 .bss           0x00000000c00095ac        0x0 sync.o
 .bss           0x00000000c00095ac       0x14 keyboard.o
 .bss           0x00000000c00095c0        0x0 ioqueue.o
 .bss           0x00000000c00095c0       0x6c tss.o
 .bss           0x00000000c000962c        0x0 process.o
 .bss           0x00000000c000962c        0x0 syscall.o
 .bss           0x00000000c000962c        0x0 syscall-init.o
 .bss           0x00000000c000962c        0x0 stdio.o
 *(COMMON)
 *fill*         0x00000000c000962c       0x14 
 COMMON         0x00000000c0009640      0x424 interrupt.o
                0x00000000c0009640                intr_name
                0x00000000c0009860                idt_table
 COMMON         0x00000000c0009a64        0x4 timer.o
                0x00000000c0009a64                ticks
 *fill*         0x00000000c0009a68       0x18 
 COMMON         0x00000000c0009a80       0x6c memory.o
                0x00000000c0009a80                user_pool
                0x00000000c0009aac                kernel_vaddr
                0x00000000c0009ac0                kernel_pool
 COMMON         0x00000000c0009aec       0x40 thread.o
                0x00000000c0009aec                thread_ready_list
                0x00000000c0009afc                thread_all_list
                0x00000000c0009b0c                main_thread
                0x00000000c0009b10                pid_lock
 *fill*         0x00000000c0009b2c       0x14 
 COMMON         0x00000000c0009b40       0x6c keyboard.o
                0x00000000c0009b40                kbd_buf
 *fill*         0x00000000c0009bac       0x14 
 COMMON         0x00000000c0009bc0       0x80 syscall-init.o
                0x00000000c0009bc0                syscall_table
                0x00000000c0009c40                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c0009c40                . = ALIGN (0x4)
                0x00000000c0009c40                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c0009c40                . = ALIGN (0x4)
                0x00000000c0009c40                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c0009c40                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 init.o
 .comment       0x0000000000000011       0x12 interrupt.o
 .comment       0x0000000000000011       0x12 timer.o
 .comment       0x0000000000000011       0x12 debug.o
 .comment       0x0000000000000011       0x12 memory.o
 .comment       0x0000000000000011       0x12 bitmap.o
 .comment       0x0000000000000011       0x12 string.o
 .comment       0x0000000000000011       0x12 thread.o
 .comment       0x0000000000000011       0x12 list.o
 .comment       0x0000000000000011       0x12 console.o
 .comment       0x0000000000000011       0x12 sync.o
 .comment       0x0000000000000011       0x12 keyboard.o
 .comment       0x0000000000000011       0x12 ioqueue.o
 .comment       0x0000000000000011       0x12 tss.o
 .comment       0x0000000000000011       0x12 process.o
 .comment       0x0000000000000011       0x12 syscall.o
 .comment       0x0000000000000011       0x12 syscall-init.o
 .comment       0x0000000000000011       0x12 stdio.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.bin elf32-i386)
